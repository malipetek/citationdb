name: Issue opened

on:
  issues:
    types: [opened]

jobs:
  check_request:
    runs-on: ubuntu-latest
    steps:
      - name: Check if issue is from Airtable app connection
        id: check-app-connection
        run: |
          if [[ "${{ github.event.issue.performed_via_github_app.slug }}" == "airtable-connector" ]]; then
            echo "app-connection=true" >> $GITHUB_OUTPUT
          else
            echo "app-connection=false" >> $GITHUB_OUTPUT
          fi

      - name: Check issue title
        if: steps.check-app-connection.outputs.app-connection == 'true' && github.event.issue.title == 'build request from airtable'
        id: build
        run: |
          a=$(echo "Build is test")
          echo "build_output=$a" >> $GITHUB_OUTPUT
      - name: Check issue title
        if: steps.check-app-connection.outputs.app-connection == 'false' && github.event.issue.title == 'build request from airtable'
        id: reject
        run: |
          a=$(echo "Wont build, because this issue is not coming from airtable connection")
          echo "build_output=$a" >> $GITHUB_OUTPUT
    outputs:
      BUILD_OUTPUT: ${{ steps.build.outputs.build_output || steps.reject.outputs.build_output }}

  report:
    runs-on: ubuntu-latest
    needs: check_request
    env:
      BUILD_OUTPUT: ${{ needs.check_request.outputs.BUILD_OUTPUT }}
    steps:
      - name: get issue number
        id: get_issue_number
        uses: actions/github-script@v6
        with:
          script: |
            if (context.issue.number) {
              // Return issue number if present
              return context.issue.number;
            } else {
              // Otherwise return issue number from commit
              return (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0].number;
            }
          result-encoding: string
      
      - name: Issue number
        run: echo '${{steps.get_issue_number.outputs.result}}'

      - name: Body
        run: echo $BUILD_OUTPUT
        env:
          BUILD_OUTPUT: ${{needs.check_request.outputs.BUILD_OUTPUT}}
      - name: debug
        uses: hmarr/debug-action@v2
        
      - name: comment-actions
        uses: GrantBirki/comment@v2.0.3
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          issue-number: ${{steps.get_issue_number.outputs.result}}
          body: ${{ needs.check_request.outputs.BUILD_OUTPUT }}
    permissions:
      issues: write

